apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'realm-android'

def verCode = 1
def verName = "29.09.17"
def verQa = 1

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.alex.pattern"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode verCode
        versionName verName + "." + verCode
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    dataBinding {
        enabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/rxjava.properties'
    }
    productFlavors {
        apkTest {
            applicationIdSuffix ".test"
            versionName "test"
            resValue "string", "app_name", "MvpPattern Test"
        }
        apkQa {
            applicationIdSuffix ".qa"
            versionName "qa." + verQa
            resValue "string", "app_name", "Pattern Qa" + verQa
        }
        apkClient {
            resValue "string", "app_name", "English Words"
        }
    }
    buildTypes {
        debug {
        }
        release {
            minifyEnabled true
//            storeFile file('Pattern.keystore')
//            keyAlias 'Pattern'
//            storePassword 'Password'
//            keyPassword 'Password'
        }
    }
}

dependencies {

    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Support libraries
    compile "com.android.support:support-v13:$rootProject.supportLibraryVersion"
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:percent:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"

    // Reactive programming
    compile "io.reactivex.rxjava2:rxandroid:$rootProject.rxJava2Version"
    compile "io.reactivex.rxjava2:rxjava:$rootProject.rxJava2Version"
    compile "com.jakewharton.rxbinding:rxbinding:$rootProject.rxBindingVersion"

    // Dependency injection
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"
    compile "com.google.dagger:dagger:$rootProject.daggerVersion"
    compile "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    compile "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    provided "org.glassfish:javax.annotation:$rootProject.glassfishVersion"

    // Network
    compile "com.squareup.retrofit2:retrofit:$rootProject.retrofit2Version"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.retrofit2Version"
    compile "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rootProject.retrofitRxAdapterVersion"
    compile "com.google.code.gson:gson:$rootProject.gsonVersion"
    compile "com.squareup.okhttp3:okhttp:$rootProject.okhttp3Version"
    compile "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttp3Version"

    // Others
    compile "com.android.support:multidex:$rootProject.multidexVersion"
    compile "org.greenrobot:eventbus:$rootProject.eventbusVersion"
    compile "com.squareup.picasso:picasso:$rootProject.picassoVersion"
    compile "ch.acra:acra:$rootProject.acraVersion"

    // Testing
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    androidTestCompile 'com.google.code.findbugs:jsr305:3.0.2'
}